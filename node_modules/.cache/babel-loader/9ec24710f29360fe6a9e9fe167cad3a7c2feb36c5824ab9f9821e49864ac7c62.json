{"ast":null,"code":"var _jsxFileName = \"/Users/vonika./Documents/Book Bytes/Book Bytes Project/src/components/MarkdownParser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport rehypeSlug from \"rehype-slug\";\nimport rehypeRaw from \"rehype-raw\";\nimport ParsedLink from \"./ParsedLink\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MarkdownParser({\n  file,\n  sect\n}) {\n  _s();\n  let [markdown, setMarkdown] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // console.log({sect: sect, file: file});\n        setLoading(true);\n        let result = null;\n        if (sect && file) {\n          // Both sect and file exist so construct the URL with both parameters\n          result = await axios.get(`https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/${sect}/${file}`);\n        } else if (!sect && file) {\n          // Occurs when getting a file from the root directory\n          result = await axios.get(`https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/${file}`);\n        } else {\n          // Default to getting the README\n          result = await axios.get(`https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/README.md`);\n        }\n        setMarkdown(result.data);\n      } catch (e) {\n        console.log(\"Couldn't get data. Please try again later\");\n      }\n      setLoading(false);\n    }\n    fetchData();\n  }, [file, sect]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (!markdown) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error: Could not retrieve data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: markdown,\n      remarkRehypeOptions: {\n        allowDangerousHtml: true\n      } // HTML is required for the all ids to be targetable\n      ,\n      rehypePlugins: [rehypeSlug, rehypeRaw],\n      components: {\n        // Replaces relative links in a markdown file with a parsed version of the link\n        // All other links are left untouched\n        a({\n          className,\n          children,\n          href,\n          id\n        }) {\n          if (href.startsWith(\"http\") || href.charAt(0) === \"#\") {\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              className: className,\n              href: href,\n              id: id,\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(ParsedLink, {\n            children: children,\n            className: className,\n            sect: sect,\n            href: href,\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 20\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MarkdownParser, \"zDmBbxsI/q2GaDSwiTvQOM1BHMM=\");\n_c = MarkdownParser;\nexport default MarkdownParser;\nvar _c;\n$RefreshReg$(_c, \"MarkdownParser\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReactMarkdown","rehypeSlug","rehypeRaw","ParsedLink","jsxDEV","_jsxDEV","MarkdownParser","file","sect","_s","markdown","setMarkdown","loading","setLoading","fetchData","result","get","data","e","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","remarkRehypeOptions","allowDangerousHtml","rehypePlugins","components","a","className","href","id","startsWith","charAt","_c","$RefreshReg$"],"sources":["/Users/vonika./Documents/Book Bytes/Book Bytes Project/src/components/MarkdownParser.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport ReactMarkdown from \"react-markdown\";\nimport rehypeSlug from \"rehype-slug\";\nimport rehypeRaw from \"rehype-raw\";\n\nimport ParsedLink from \"./ParsedLink\";\n\nfunction MarkdownParser({ file, sect }) {\n  let [markdown, setMarkdown] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // console.log({sect: sect, file: file});\n        setLoading(true);\n        let result = null;\n        if (sect && file) {\n          // Both sect and file exist so construct the URL with both parameters\n          result = await axios.get(\n            `https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/${sect}/${file}`\n          );\n        } else if (!sect && file) {\n          // Occurs when getting a file from the root directory\n          result = await axios.get(\n            `https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/${file}`\n          );\n        } else {\n          // Default to getting the README\n          result = await axios.get(\n            `https://raw.githubusercontent.com/EbookFoundation/free-programming-books/main/README.md`\n          );\n        }\n\n        setMarkdown(result.data);\n      } catch (e) {\n        console.log(\"Couldn't get data. Please try again later\");\n      }\n      setLoading(false);\n    }\n    fetchData();\n  }, [file, sect]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (!markdown) {\n    return <p>Error: Could not retrieve data.</p>;\n  }\n\n  return (\n    <section>\n      <ReactMarkdown\n        children={markdown}\n        remarkRehypeOptions={{ allowDangerousHtml: true }} // HTML is required for the all ids to be targetable\n        rehypePlugins={[rehypeSlug, rehypeRaw]}\n        components={{\n          // Replaces relative links in a markdown file with a parsed version of the link\n          // All other links are left untouched\n          a({ className, children, href, id}) {\n            if (href.startsWith(\"http\") || href.charAt(0) === \"#\") {\n              return (\n                <a className={className} href={href} id={id}>\n                  {children}\n                </a>\n              );\n            }\n            return <ParsedLink children={children} className={className} sect={sect} href={href} id={id}/>;\n          },\n        }}\n      />\n    </section>\n  );\n}\n\nexport default MarkdownParser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}