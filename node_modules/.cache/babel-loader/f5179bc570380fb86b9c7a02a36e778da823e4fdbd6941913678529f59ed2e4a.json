{"ast":null,"code":"var _jsxFileName = \"/Users/vonika./Documents/Book Bytes/Book Bytes Project/src/components/LangFilters.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LangFilters({\n  changeParameter,\n  data,\n  langCode\n}) {\n  _s();\n  const [languages, setLanguages] = useState([]);\n  const [selected, setSelected] = useState(langCode);\n  const [showFilters, setShow] = useState(false);\n  let options = null;\n  const handleChange = e => {\n    changeParameter(\"lang.code\", e.target.value);\n    setSelected(e.target.value);\n  };\n  useEffect(() => {\n    let queries = queryString.parse(document.location.search);\n    if (queries.lang) {\n      if (queries.lang === \"langs\" || queries.lang === \"subjects\") {\n        changeParameter(\"lang.code\", \"en\");\n        setSelected(\"en\");\n      } else {\n        changeParameter(\"lang.code\", queries.lang);\n        setSelected(queries.lang);\n      }\n    } else {\n      changeParameter(\"lang.code\", \"\");\n      setSelected(\"\");\n    }\n  }, []);\n  useEffect(\n  // run whenever data changes\n  () => {\n    if (data) {\n      let langArray = [{\n        code: \"en\",\n        name: \"English\"\n      }];\n      data.children[0].children.forEach(document => {\n        if (typeof document.language.name === \"string\" && document.language.name.length > 0) {\n          //make sure the language is valid and not blank\n          //console.log(\"LANGUAGE: \" + document.language.name)\n          if (document.language.code !== \"en\") {\n            // used to ensure only one English is listed\n            langArray.push(document.language);\n          }\n        }\n      });\n      langArray.sort((a, b) => a.name > b.name);\n      setLanguages(langArray);\n    }\n  }, [data]);\n  const createOption = language => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: \"lang\",\n          value: language.code,\n          onChange: handleChange,\n          checked: language.code === selected\n        }, language.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), language.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  };\n  options = languages && languages.map(language => {\n    return createOption(language);\n  });\n  let filterList = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        className: \"sect-select\",\n        value: \"\",\n        onChange: handleChange,\n        checked: \"\" === selected\n      }, \"all\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), \"All Languages\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), options]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"langFilters\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter by Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShow(!showFilters),\n        children: showFilters ? \"-\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), showFilters ? filterList : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(LangFilters, \"Wxv8ayK/z/2hpN8PeyGU206zNuY=\");\n_c = LangFilters;\nexport default LangFilters;\nvar _c;\n$RefreshReg$(_c, \"LangFilters\");","map":{"version":3,"names":["React","useState","useEffect","queryString","jsxDEV","_jsxDEV","LangFilters","changeParameter","data","langCode","_s","languages","setLanguages","selected","setSelected","showFilters","setShow","options","handleChange","e","target","value","queries","parse","document","location","search","lang","langArray","code","name","children","forEach","language","length","push","sort","a","b","createOption","type","className","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","map","filterList","onClick","_c","$RefreshReg$"],"sources":["/Users/vonika./Documents/Book Bytes/Book Bytes Project/src/components/LangFilters.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\n\nfunction LangFilters({ changeParameter, data, langCode }) {\n  const [languages, setLanguages] = useState([]);\n  const [selected, setSelected] = useState(langCode);\n  const [showFilters, setShow] = useState(false);\n  let options = null;\n\n  const handleChange = (e) => {\n    changeParameter(\"lang.code\", e.target.value);\n    setSelected(e.target.value);\n  };\n\n  useEffect(() => {\n    let queries = queryString.parse(document.location.search);\n    if (queries.lang) {\n      if (queries.lang === \"langs\" || queries.lang === \"subjects\") {\n        changeParameter(\"lang.code\", \"en\");\n        setSelected(\"en\");\n      } else {\n        changeParameter(\"lang.code\", queries.lang);\n        setSelected(queries.lang);\n      }\n    } else {\n      changeParameter(\"lang.code\", \"\");\n      setSelected(\"\")\n    }\n  }, []);\n\n  useEffect(\n    // run whenever data changes\n    () => {\n      if (data) {\n        let langArray = [{ code: \"en\", name: \"English\" }];\n        data.children[0].children.forEach((document) => {\n          if (typeof document.language.name === \"string\" && document.language.name.length > 0) {\n            //make sure the language is valid and not blank\n            //console.log(\"LANGUAGE: \" + document.language.name)\n            if (document.language.code !== \"en\") {\n              // used to ensure only one English is listed\n              langArray.push(document.language);\n            }\n          }\n        });\n        langArray.sort((a, b) => a.name > b.name);\n        setLanguages(langArray);\n      }\n    },\n    [data]\n  );\n\n  const createOption = (language) => {\n    return (\n      <div>\n        <label>\n          <input\n            type=\"radio\"\n            className=\"lang\"\n            key={language.code}\n            value={language.code}\n            onChange={handleChange}\n            checked={language.code === selected}\n          />\n          {language.name}\n        </label>\n      </div>\n    );\n  };\n\n  options =\n    languages &&\n    languages.map((language) => {\n      return createOption(language);\n    });\n\n  let filterList = (\n    <form className=\"filters\">\n      <label>\n        <input\n          type=\"radio\"\n          key=\"all\"\n          className=\"sect-select\"\n          value=\"\"\n          onChange={handleChange}\n          checked={\"\" === selected}\n        />\n        All Languages\n      </label>\n      {options}\n    </form>\n  );\n\n  return (\n    <div className=\"langFilters\">\n      <div className=\"filterHeader\">\n        <h3>Filter by Language</h3>\n        <button onClick={() => setShow(!showFilters)}>{showFilters ? \"-\" : \"+\"}</button>\n      </div>\n      {showFilters ? filterList : \"\"}\n    </div>\n  );\n}\n\nexport default LangFilters;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,WAAWA,CAAC;EAAEC,eAAe;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACQ,QAAQ,CAAC;EAClD,MAAM,CAACM,WAAW,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC9C,IAAIgB,OAAO,GAAG,IAAI;EAElB,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BZ,eAAe,CAAC,WAAW,EAAEY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC5CP,WAAW,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd,IAAIoB,OAAO,GAAGnB,WAAW,CAACoB,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACC,MAAM,CAAC;IACzD,IAAIJ,OAAO,CAACK,IAAI,EAAE;MAChB,IAAIL,OAAO,CAACK,IAAI,KAAK,OAAO,IAAIL,OAAO,CAACK,IAAI,KAAK,UAAU,EAAE;QAC3DpB,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC;QAClCO,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLP,eAAe,CAAC,WAAW,EAAEe,OAAO,CAACK,IAAI,CAAC;QAC1Cb,WAAW,CAACQ,OAAO,CAACK,IAAI,CAAC;MAC3B;IACF,CAAC,MAAM;MACLpB,eAAe,CAAC,WAAW,EAAE,EAAE,CAAC;MAChCO,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS;EACP;EACA,MAAM;IACJ,IAAIM,IAAI,EAAE;MACR,IAAIoB,SAAS,GAAG,CAAC;QAAEC,IAAI,EAAE,IAAI;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;MACjDtB,IAAI,CAACuB,QAAQ,CAAC,CAAC,CAAC,CAACA,QAAQ,CAACC,OAAO,CAAER,QAAQ,IAAK;QAC9C,IAAI,OAAOA,QAAQ,CAACS,QAAQ,CAACH,IAAI,KAAK,QAAQ,IAAIN,QAAQ,CAACS,QAAQ,CAACH,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;UACnF;UACA;UACA,IAAIV,QAAQ,CAACS,QAAQ,CAACJ,IAAI,KAAK,IAAI,EAAE;YACnC;YACAD,SAAS,CAACO,IAAI,CAACX,QAAQ,CAACS,QAAQ,CAAC;UACnC;QACF;MACF,CAAC,CAAC;MACFL,SAAS,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACP,IAAI,GAAGQ,CAAC,CAACR,IAAI,CAAC;MACzClB,YAAY,CAACgB,SAAS,CAAC;IACzB;EACF,CAAC,EACD,CAACpB,IAAI,CACP,CAAC;EAED,MAAM+B,YAAY,GAAIN,QAAQ,IAAK;IACjC,oBACE5B,OAAA;MAAA0B,QAAA,eACE1B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UACEmC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAC,MAAM;UAEhBpB,KAAK,EAAEY,QAAQ,CAACJ,IAAK;UACrBa,QAAQ,EAAExB,YAAa;UACvByB,OAAO,EAAEV,QAAQ,CAACJ,IAAI,KAAKhB;QAAS,GAH/BoB,QAAQ,CAACJ,IAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAInB,CAAC,EACDd,QAAQ,CAACH,IAAI;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV,CAAC;EAED9B,OAAO,GACLN,SAAS,IACTA,SAAS,CAACqC,GAAG,CAAEf,QAAQ,IAAK;IAC1B,OAAOM,YAAY,CAACN,QAAQ,CAAC;EAC/B,CAAC,CAAC;EAEJ,IAAIgB,UAAU,gBACZ5C,OAAA;IAAMoC,SAAS,EAAC,SAAS;IAAAV,QAAA,gBACvB1B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QACEmC,IAAI,EAAC,OAAO;QAEZC,SAAS,EAAC,aAAa;QACvBpB,KAAK,EAAC,EAAE;QACRqB,QAAQ,EAAExB,YAAa;QACvByB,OAAO,EAAE,EAAE,KAAK9B;MAAS,GAJrB,KAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CAAC,iBAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACP9B,OAAO;EAAA;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CACP;EAED,oBACE1C,OAAA;IAAKoC,SAAS,EAAC,aAAa;IAAAV,QAAA,gBAC1B1B,OAAA;MAAKoC,SAAS,EAAC,cAAc;MAAAV,QAAA,gBAC3B1B,OAAA;QAAA0B,QAAA,EAAI;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B1C,OAAA;QAAQ6C,OAAO,EAAEA,CAAA,KAAMlC,OAAO,CAAC,CAACD,WAAW,CAAE;QAAAgB,QAAA,EAAEhB,WAAW,GAAG,GAAG,GAAG;MAAG;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,EACLhC,WAAW,GAAGkC,UAAU,GAAG,EAAE;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACrC,EAAA,CAnGQJ,WAAW;AAAA6C,EAAA,GAAX7C,WAAW;AAqGpB,eAAeA,WAAW;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}